kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  annotations:
    app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"result"}]'
    iconClass: icon-postgresql
    template.alpha.openshift.io/wait-for-ready: 'true'
  resourceVersion: '765809532'
  name: db
  uid: 51a31a56-fbc7-476a-986c-ce4fe383e0a0
  creationTimestamp: '2023-05-23T13:58:44Z'
  generation: 2
  managedFields:
    - manager: openshift-controller-manager
      operation: Update
      apiVersion: apps.openshift.io/v1
      time: '2023-05-23T13:58:45Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:template.alpha.openshift.io/wait-for-ready': {}
          'f:labels':
            .: {}
            'f:template': {}
            'f:template.openshift.io/template-instance-owner': {}
        'f:spec':
          'f:replicas': {}
          'f:selector':
            .: {}
            'f:name': {}
          'f:strategy':
            'f:activeDeadlineSeconds': {}
            'f:recreateParams':
              .: {}
              'f:timeoutSeconds': {}
            'f:type': {}
          'f:template':
            .: {}
            'f:metadata':
              .: {}
              'f:creationTimestamp': {}
              'f:labels':
                .: {}
                'f:name': {}
            'f:spec':
              .: {}
              'f:containers':
                .: {}
                'k:{"name":"postgresql"}':
                  'f:image': {}
                  'f:volumeMounts':
                    .: {}
                    'k:{"mountPath":"/var/lib/pgsql/data"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                  'f:terminationMessagePolicy': {}
                  .: {}
                  'f:resources':
                    .: {}
                    'f:limits':
                      .: {}
                      'f:memory': {}
                  'f:livenessProbe':
                    .: {}
                    'f:exec':
                      .: {}
                      'f:command': {}
                    'f:failureThreshold': {}
                    'f:initialDelaySeconds': {}
                    'f:periodSeconds': {}
                    'f:successThreshold': {}
                    'f:timeoutSeconds': {}
                  'f:env':
                    .: {}
                    'k:{"name":"POSTGRESQL_DATABASE"}':
                      .: {}
                      'f:name': {}
                      'f:valueFrom':
                        .: {}
                        'f:secretKeyRef': {}
                    'k:{"name":"POSTGRESQL_PASSWORD"}':
                      .: {}
                      'f:name': {}
                      'f:valueFrom':
                        .: {}
                        'f:secretKeyRef': {}
                    'k:{"name":"POSTGRESQL_USER"}':
                      .: {}
                      'f:name': {}
                      'f:valueFrom':
                        .: {}
                        'f:secretKeyRef': {}
                  'f:readinessProbe':
                    .: {}
                    'f:exec':
                      .: {}
                      'f:command': {}
                    'f:failureThreshold': {}
                    'f:initialDelaySeconds': {}
                    'f:periodSeconds': {}
                    'f:successThreshold': {}
                    'f:timeoutSeconds': {}
                  'f:securityContext':
                    .: {}
                    'f:capabilities': {}
                    'f:privileged': {}
                  'f:terminationMessagePath': {}
                  'f:imagePullPolicy': {}
                  'f:ports':
                    .: {}
                    'k:{"containerPort":5432,"protocol":"TCP"}':
                      .: {}
                      'f:containerPort': {}
                      'f:protocol': {}
                  'f:name': {}
              'f:dnsPolicy': {}
              'f:restartPolicy': {}
              'f:schedulerName': {}
              'f:securityContext': {}
              'f:terminationGracePeriodSeconds': {}
              'f:volumes':
                .: {}
                'k:{"name":"db-data"}':
                  .: {}
                  'f:name': {}
                  'f:persistentVolumeClaim':
                    .: {}
                    'f:claimName': {}
          'f:triggers': {}
    - manager: openshift-controller-manager
      operation: Update
      apiVersion: apps.openshift.io/v1
      time: '2023-05-23T13:59:02Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:status':
          'f:updatedReplicas': {}
          'f:readyReplicas': {}
          'f:conditions':
            .: {}
            'k:{"type":"Available"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:status': {}
              'f:type': {}
            'k:{"type":"Progressing"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
          'f:details':
            .: {}
            'f:causes': {}
            'f:message': {}
          'f:replicas': {}
          'f:availableReplicas': {}
          'f:observedGeneration': {}
          'f:unavailableReplicas': {}
          'f:latestVersion': {}
      subresource: status
    - manager: Mozilla
      operation: Update
      apiVersion: apps.openshift.io/v1
      time: '2023-05-23T14:10:12Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            'f:app.openshift.io/connects-to': {}
            'f:iconClass': {}
          'f:labels':
            'f:app.kubernetes.io/part-of': {}
            'f:app.openshift.io/runtime': {}
  namespace: yannvd-dev
  labels:
    app.kubernetes.io/part-of: example-voting-app
    app.openshift.io/runtime: postgresql
    template: postgresql-persistent-template
    template.openshift.io/template-instance-owner: f0716c71-51cd-49cf-a5d9-44faab635d5c
spec:
  strategy:
    type: Recreate
    recreateParams:
      timeoutSeconds: 600
    resources: {}
    activeDeadlineSeconds: 21600
  triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - postgresql
        from:
          kind: ImageStreamTag
          namespace: openshift
          name: 'postgresql:10-el8'
        lastTriggeredImage: >-
          image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:f98ee90210167538a919250e6cee6fc2105744b9adfd986034cd0a3056d1b209
    - type: ConfigChange
  replicas: 1
  revisionHistoryLimit: 10
  test: false
  selector:
    name: db
  template:
    metadata:
      creationTimestamp: null
      labels:
        name: db
    spec:
      volumes:
        - name: db-data
          persistentVolumeClaim:
            claimName: db
      containers:
        - resources:
            limits:
              memory: 512Mi
          readinessProbe:
            exec:
              command:
                - /usr/libexec/check-container
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: postgresql
          livenessProbe:
            exec:
              command:
                - /usr/libexec/check-container
                - '--live'
            initialDelaySeconds: 120
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  name: db
                  key: database-user
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db
                  key: database-password
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: db
                  key: database-name
          securityContext:
            capabilities: {}
            privileged: false
          ports:
            - containerPort: 5432
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: db-data
              mountPath: /var/lib/pgsql/data
          terminationMessagePolicy: File
          image: >-
            image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:f98ee90210167538a919250e6cee6fc2105744b9adfd986034cd0a3056d1b209
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
status:
  observedGeneration: 2
  details:
    message: config change
    causes:
      - type: ConfigChange
  availableReplicas: 1
  unavailableReplicas: 0
  latestVersion: 1
  updatedReplicas: 1
  conditions:
    - type: Available
      status: 'True'
      lastUpdateTime: '2023-05-23T13:58:59Z'
      lastTransitionTime: '2023-05-23T13:58:59Z'
      message: Deployment config has minimum availability.
    - type: Progressing
      status: 'True'
      lastUpdateTime: '2023-05-23T13:59:02Z'
      lastTransitionTime: '2023-05-23T13:59:02Z'
      reason: NewReplicationControllerAvailable
      message: replication controller "db-1" successfully rolled out
  replicas: 1
  readyReplicas: 1

---

kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"worker"}]'
    app.openshift.io/route-disabled: 'false'
    deployment.kubernetes.io/revision: '1'
    image.openshift.io/triggers: >-
      [{"from":{"kind":"ImageStreamTag","name":"redis:alpine","namespace":"yannvd-dev"},"fieldPath":"spec.template.spec.containers[?(@.name==\"redis\")].image","pause":"false"}]
    openshift.io/generated-by: OpenShiftWebConsole
  resourceVersion: '765810278'
  name: redis
  uid: 0d9121fa-d075-4aba-8966-1e8cc7a5bf0f
  creationTimestamp: '2023-05-23T13:13:47Z'
  generation: 4
  managedFields:
    - manager: Mozilla
      operation: Update
      apiVersion: apps/v1
      time: '2023-05-23T13:20:25Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:alpha.image.policy.openshift.io/resolve-names': {}
            'f:app.openshift.io/connects-to': {}
            'f:app.openshift.io/route-disabled': {}
            'f:image.openshift.io/triggers': {}
            'f:openshift.io/generated-by': {}
          'f:labels':
            .: {}
            'f:app': {}
            'f:app.kubernetes.io/component': {}
            'f:app.kubernetes.io/instance': {}
            'f:app.kubernetes.io/name': {}
            'f:app.kubernetes.io/part-of': {}
            'f:app.openshift.io/runtime': {}
            'f:app.openshift.io/runtime-namespace': {}
        'f:spec':
          'f:progressDeadlineSeconds': {}
          'f:revisionHistoryLimit': {}
          'f:selector': {}
          'f:strategy':
            'f:rollingUpdate':
              .: {}
              'f:maxSurge': {}
              'f:maxUnavailable': {}
            'f:type': {}
          'f:template':
            'f:metadata':
              'f:annotations':
                .: {}
                'f:openshift.io/generated-by': {}
              'f:labels':
                .: {}
                'f:app': {}
                'f:deployment': {}
            'f:spec':
              'f:containers':
                'k:{"name":"redis"}':
                  'f:image': {}
                  'f:volumeMounts':
                    .: {}
                    'k:{"mountPath":"/data"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                  'f:terminationMessagePolicy': {}
                  .: {}
                  'f:resources': {}
                  'f:terminationMessagePath': {}
                  'f:imagePullPolicy': {}
                  'f:ports':
                    .: {}
                    'k:{"containerPort":6379,"protocol":"TCP"}':
                      .: {}
                      'f:containerPort': {}
                      'f:protocol': {}
                  'f:name': {}
              'f:dnsPolicy': {}
              'f:restartPolicy': {}
              'f:schedulerName': {}
              'f:securityContext': {}
              'f:terminationGracePeriodSeconds': {}
              'f:volumes':
                .: {}
                'k:{"name":"redis-1"}':
                  .: {}
                  'f:emptyDir': {}
                  'f:name': {}
    - manager: kube-controller-manager
      operation: Update
      apiVersion: apps/v1
      time: '2023-05-23T14:10:26Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            'f:deployment.kubernetes.io/revision': {}
        'f:status':
          'f:availableReplicas': {}
          'f:conditions':
            .: {}
            'k:{"type":"Available"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
            'k:{"type":"Progressing"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
          'f:observedGeneration': {}
          'f:readyReplicas': {}
          'f:replicas': {}
          'f:updatedReplicas': {}
      subresource: status
  namespace: yannvd-dev
  labels:
    app: redis
    app.kubernetes.io/component: redis
    app.kubernetes.io/instance: redis
    app.kubernetes.io/name: redis
    app.kubernetes.io/part-of: example-voting-app
    app.openshift.io/runtime: redis
    app.openshift.io/runtime-namespace: yannvd-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: redis
        deployment: redis
      annotations:
        openshift.io/generated-by: OpenShiftWebConsole
    spec:
      volumes:
        - name: redis-1
          emptyDir: {}
      containers:
        - name: redis
          image: >-
            image-registry.openshift-image-registry.svc:5000/yannvd-dev/redis@sha256:e20345b7ec692815860c07f0209eb0465687b0c28cd85df412811ae1ac7b653e
          ports:
            - containerPort: 6379
              protocol: TCP
          resources: {}
          volumeMounts:
            - name: redis-1
              mountPath: /data
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
status:
  observedGeneration: 4
  replicas: 1
  updatedReplicas: 1
  readyReplicas: 1
  availableReplicas: 1
  conditions:
    - type: Progressing
      status: 'True'
      lastUpdateTime: '2023-05-23T13:13:48Z'
      lastTransitionTime: '2023-05-23T13:13:47Z'
      reason: NewReplicaSetAvailable
      message: ReplicaSet "redis-7549449cfb" has successfully progressed.
    - type: Available
      status: 'True'
      lastUpdateTime: '2023-05-23T14:10:26Z'
      lastTransitionTime: '2023-05-23T14:10:26Z'
      reason: MinimumReplicasAvailable
      message: Deployment has minimum availability.


---

kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/connects-to: >-
      [{"apiVersion":"apps.openshift.io/v1","kind":"DeploymentConfig","name":"db"}]
    app.openshift.io/route-disabled: 'false'
    deployment.kubernetes.io/revision: '1'
    image.openshift.io/triggers: >-
      [{"from":{"kind":"ImageStreamTag","name":"worker:worker","namespace":"yannvd-dev"},"fieldPath":"spec.template.spec.containers[?(@.name==\"worker\")].image","pause":"false"}]
    openshift.io/generated-by: OpenShiftWebConsole
  resourceVersion: '765810591'
  name: worker
  uid: 354da922-d077-4fcb-8f43-f435a1afafdb
  creationTimestamp: '2023-05-23T13:16:18Z'
  generation: 4
  managedFields:
    - manager: Mozilla
      operation: Update
      apiVersion: apps/v1
      time: '2023-05-23T13:20:30Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:alpha.image.policy.openshift.io/resolve-names': {}
            'f:app.openshift.io/connects-to': {}
            'f:app.openshift.io/route-disabled': {}
            'f:image.openshift.io/triggers': {}
            'f:openshift.io/generated-by': {}
          'f:labels':
            .: {}
            'f:app': {}
            'f:app.kubernetes.io/component': {}
            'f:app.kubernetes.io/instance': {}
            'f:app.kubernetes.io/name': {}
            'f:app.kubernetes.io/part-of': {}
            'f:app.openshift.io/runtime': {}
            'f:app.openshift.io/runtime-namespace': {}
        'f:spec':
          'f:progressDeadlineSeconds': {}
          'f:revisionHistoryLimit': {}
          'f:selector': {}
          'f:strategy':
            'f:rollingUpdate':
              .: {}
              'f:maxSurge': {}
              'f:maxUnavailable': {}
            'f:type': {}
          'f:template':
            'f:metadata':
              'f:annotations':
                .: {}
                'f:openshift.io/generated-by': {}
              'f:labels':
                .: {}
                'f:app': {}
                'f:deployment': {}
            'f:spec':
              'f:containers':
                'k:{"name":"worker"}':
                  .: {}
                  'f:image': {}
                  'f:imagePullPolicy': {}
                  'f:name': {}
                  'f:ports':
                    .: {}
                    'k:{"containerPort":8080,"protocol":"TCP"}':
                      .: {}
                      'f:containerPort': {}
                      'f:protocol': {}
                  'f:resources': {}
                  'f:terminationMessagePath': {}
                  'f:terminationMessagePolicy': {}
              'f:dnsPolicy': {}
              'f:restartPolicy': {}
              'f:schedulerName': {}
              'f:securityContext': {}
              'f:terminationGracePeriodSeconds': {}
    - manager: kube-controller-manager
      operation: Update
      apiVersion: apps/v1
      time: '2023-05-23T14:10:32Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            'f:deployment.kubernetes.io/revision': {}
        'f:status':
          'f:availableReplicas': {}
          'f:conditions':
            .: {}
            'k:{"type":"Available"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
            'k:{"type":"Progressing"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
          'f:observedGeneration': {}
          'f:readyReplicas': {}
          'f:replicas': {}
          'f:updatedReplicas': {}
      subresource: status
  namespace: yannvd-dev
  labels:
    app: worker
    app.kubernetes.io/component: worker
    app.kubernetes.io/instance: worker
    app.kubernetes.io/name: worker
    app.kubernetes.io/part-of: example-voting-app
    app.openshift.io/runtime: dotnet
    app.openshift.io/runtime-namespace: yannvd-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: worker
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: worker
        deployment: worker
      annotations:
        openshift.io/generated-by: OpenShiftWebConsole
    spec:
      containers:
        - name: worker
          image: >-
            image-registry.openshift-image-registry.svc:5000/yannvd-dev/worker@sha256:414b3ac5975fdc69095e72e1c6277a756ea49b1e64b3b21e08169414d5a07c7e
          ports:
            - containerPort: 8080
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
status:
  observedGeneration: 4
  replicas: 1
  updatedReplicas: 1
  readyReplicas: 1
  availableReplicas: 1
  conditions:
    - type: Progressing
      status: 'True'
      lastUpdateTime: '2023-05-23T13:16:20Z'
      lastTransitionTime: '2023-05-23T13:16:18Z'
      reason: NewReplicaSetAvailable
      message: ReplicaSet "worker-f6d9c8b95" has successfully progressed.
    - type: Available
      status: 'True'
      lastUpdateTime: '2023-05-23T14:10:32Z'
      lastTransitionTime: '2023-05-23T14:10:32Z'
      reason: MinimumReplicasAvailable
      message: Deployment has minimum availability.


---

kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"redis"}]'
    app.openshift.io/route-disabled: 'false'
    deployment.kubernetes.io/revision: '1'
    image.openshift.io/triggers: >-
      [{"from":{"kind":"ImageStreamTag","name":"vote:vote","namespace":"yannvd-dev"},"fieldPath":"spec.template.spec.containers[?(@.name==\"vote\")].image","pause":"false"}]
    openshift.io/generated-by: OpenShiftWebConsole
  resourceVersion: '765812591'
  name: vote
  uid: c0292a88-84f3-43b3-b0cb-89e948ebe60e
  creationTimestamp: '2023-05-23T13:14:19Z'
  generation: 4
  managedFields:
    - manager: Mozilla
      operation: Update
      apiVersion: apps/v1
      time: '2023-05-23T14:09:10Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:alpha.image.policy.openshift.io/resolve-names': {}
            'f:app.openshift.io/connects-to': {}
            'f:app.openshift.io/route-disabled': {}
            'f:image.openshift.io/triggers': {}
            'f:openshift.io/generated-by': {}
          'f:labels':
            .: {}
            'f:app': {}
            'f:app.kubernetes.io/component': {}
            'f:app.kubernetes.io/instance': {}
            'f:app.kubernetes.io/name': {}
            'f:app.kubernetes.io/part-of': {}
            'f:app.openshift.io/runtime': {}
            'f:app.openshift.io/runtime-namespace': {}
        'f:spec':
          'f:progressDeadlineSeconds': {}
          'f:revisionHistoryLimit': {}
          'f:selector': {}
          'f:strategy':
            'f:rollingUpdate':
              .: {}
              'f:maxSurge': {}
              'f:maxUnavailable': {}
            'f:type': {}
          'f:template':
            'f:metadata':
              'f:annotations':
                .: {}
                'f:openshift.io/generated-by': {}
              'f:labels':
                .: {}
                'f:app': {}
                'f:deployment': {}
            'f:spec':
              'f:containers':
                'k:{"name":"vote"}':
                  .: {}
                  'f:image': {}
                  'f:imagePullPolicy': {}
                  'f:name': {}
                  'f:ports':
                    .: {}
                    'k:{"containerPort":8000,"protocol":"TCP"}':
                      .: {}
                      'f:containerPort': {}
                      'f:protocol': {}
                  'f:resources': {}
                  'f:terminationMessagePath': {}
                  'f:terminationMessagePolicy': {}
              'f:dnsPolicy': {}
              'f:restartPolicy': {}
              'f:schedulerName': {}
              'f:securityContext': {}
              'f:terminationGracePeriodSeconds': {}
    - manager: kube-controller-manager
      operation: Update
      apiVersion: apps/v1
      time: '2023-05-23T14:11:10Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            'f:deployment.kubernetes.io/revision': {}
        'f:status':
          'f:availableReplicas': {}
          'f:conditions':
            .: {}
            'k:{"type":"Available"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
            'k:{"type":"Progressing"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
          'f:observedGeneration': {}
          'f:readyReplicas': {}
          'f:replicas': {}
          'f:updatedReplicas': {}
      subresource: status
  namespace: yannvd-dev
  labels:
    app: vote
    app.kubernetes.io/component: vote
    app.kubernetes.io/instance: vote
    app.kubernetes.io/name: vote
    app.kubernetes.io/part-of: example-voting-app
    app.openshift.io/runtime: apache
    app.openshift.io/runtime-namespace: yannvd-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vote
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: vote
        deployment: vote
      annotations:
        openshift.io/generated-by: OpenShiftWebConsole
    spec:
      containers:
        - name: vote
          image: >-
            image-registry.openshift-image-registry.svc:5000/yannvd-dev/vote@sha256:95f10a95648d2cee75fec3d19ad2a60cbc36fac1c01453017cee9400a7fccec1
          ports:
            - containerPort: 8000
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
status:
  observedGeneration: 4
  replicas: 1
  updatedReplicas: 1
  readyReplicas: 1
  availableReplicas: 1
  conditions:
    - type: Progressing
      status: 'True'
      lastUpdateTime: '2023-05-23T13:14:21Z'
      lastTransitionTime: '2023-05-23T13:14:19Z'
      reason: NewReplicaSetAvailable
      message: ReplicaSet "vote-7fb9999867" has successfully progressed.
    - type: Available
      status: 'True'
      lastUpdateTime: '2023-05-23T14:11:10Z'
      lastTransitionTime: '2023-05-23T14:11:10Z'
      reason: MinimumReplicasAvailable
      message: Deployment has minimum availability.

---

kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/route-disabled: 'false'
    deployment.kubernetes.io/revision: '1'
    image.openshift.io/triggers: >-
      [{"from":{"kind":"ImageStreamTag","name":"result:result","namespace":"yannvd-dev"},"fieldPath":"spec.template.spec.containers[?(@.name==\"result\")].image","pause":"false"}]
    openshift.io/generated-by: OpenShiftWebConsole
  resourceVersion: '765811822'
  name: result
  uid: 8a317a77-e5e9-4055-8cd4-c03b34f2b028
  creationTimestamp: '2023-05-23T13:19:48Z'
  generation: 3
  managedFields:
    - manager: Mozilla
      operation: Update
      apiVersion: apps/v1
      time: '2023-05-23T14:09:46Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:alpha.image.policy.openshift.io/resolve-names': {}
            'f:app.openshift.io/route-disabled': {}
            'f:image.openshift.io/triggers': {}
            'f:openshift.io/generated-by': {}
          'f:labels':
            .: {}
            'f:app': {}
            'f:app.kubernetes.io/component': {}
            'f:app.kubernetes.io/instance': {}
            'f:app.kubernetes.io/name': {}
            'f:app.kubernetes.io/part-of': {}
            'f:app.openshift.io/runtime': {}
            'f:app.openshift.io/runtime-namespace': {}
        'f:spec':
          'f:progressDeadlineSeconds': {}
          'f:revisionHistoryLimit': {}
          'f:selector': {}
          'f:strategy':
            'f:rollingUpdate':
              .: {}
              'f:maxSurge': {}
              'f:maxUnavailable': {}
            'f:type': {}
          'f:template':
            'f:metadata':
              'f:annotations':
                .: {}
                'f:openshift.io/generated-by': {}
              'f:labels':
                .: {}
                'f:app': {}
                'f:deployment': {}
            'f:spec':
              'f:containers':
                'k:{"name":"result"}':
                  .: {}
                  'f:image': {}
                  'f:imagePullPolicy': {}
                  'f:name': {}
                  'f:ports':
                    .: {}
                    'k:{"containerPort":8001,"protocol":"TCP"}':
                      .: {}
                      'f:containerPort': {}
                      'f:protocol': {}
                  'f:resources': {}
                  'f:terminationMessagePath': {}
                  'f:terminationMessagePolicy': {}
              'f:dnsPolicy': {}
              'f:restartPolicy': {}
              'f:schedulerName': {}
              'f:securityContext': {}
              'f:terminationGracePeriodSeconds': {}
    - manager: kube-controller-manager
      operation: Update
      apiVersion: apps/v1
      time: '2023-05-23T14:10:58Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            'f:deployment.kubernetes.io/revision': {}
        'f:status':
          'f:availableReplicas': {}
          'f:conditions':
            .: {}
            'k:{"type":"Available"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
            'k:{"type":"Progressing"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
          'f:observedGeneration': {}
          'f:readyReplicas': {}
          'f:replicas': {}
          'f:updatedReplicas': {}
      subresource: status
  namespace: yannvd-dev
  labels:
    app: result
    app.kubernetes.io/component: result
    app.kubernetes.io/instance: result
    app.kubernetes.io/name: result
    app.kubernetes.io/part-of: example-voting-app
    app.openshift.io/runtime: nodejs
    app.openshift.io/runtime-namespace: yannvd-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: result
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: result
        deployment: result
      annotations:
        openshift.io/generated-by: OpenShiftWebConsole
    spec:
      containers:
        - name: result
          image: >-
            image-registry.openshift-image-registry.svc:5000/yannvd-dev/result@sha256:402f458f2a3a179275ee784a4f53df0701626fd62338cc6aade8e1a8b077f4d6
          ports:
            - containerPort: 8001
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
status:
  observedGeneration: 3
  replicas: 1
  updatedReplicas: 1
  readyReplicas: 1
  availableReplicas: 1
  conditions:
    - type: Progressing
      status: 'True'
      lastUpdateTime: '2023-05-23T13:19:50Z'
      lastTransitionTime: '2023-05-23T13:19:48Z'
      reason: NewReplicaSetAvailable
      message: ReplicaSet "result-c96c5c456" has successfully progressed.
    - type: Available
      status: 'True'
      lastUpdateTime: '2023-05-23T14:10:58Z'
      lastTransitionTime: '2023-05-23T14:10:58Z'
      reason: MinimumReplicasAvailable
      message: Deployment has minimum availability.
